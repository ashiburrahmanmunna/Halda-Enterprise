@{
    ViewData["Title"] = "JobDescription";
    Layout = "_LayoutAdmin";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>



<div class="container" style="background-color: #FFFFFF; box-shadow: 2px 4px 40px rgba(0, 0, 0, 0.08); border-radius: 10px;">
    <input type="hidden" id="designationId" value="@ViewBag.Id" />
    <div class="m-3">
        <div class="pt-4 d-flex justify-content-between">
            <label for="designationDropdown" style="font-weight: 600;">Select Designation:</label>
            <button id="editBtn" class="btn btn-primary">Edit</button>
        </div>
        <select id="designationDropdown" style="width: 200px;" disabled>
            <!-- Options will be populated here -->
        </select>

        <div class="row ps-3">
            <div class="col-md-8">
                <form class="mt-3">
                    <div class="form-group">
                        <label class="custom-title-font" for="description">Description:</label>
                        <textarea class="form-control border-2" id="description" rows="10" disabled></textarea>
                    </div>
                    <div class="form-group mt-4">
                        <label class="custom-title-font">Responsibilities:</label>
                        <div id="responsibilities">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control border-2" disabled>
                            </div>
                        </div>
                        <div class="text-right" style="width: 100%; text-align: right;">
                            <button class="btn fs-6 fw-bold p-1 add-responsibility mb-2" type="button" style="margin-top: auto; background: #F0F0F0;" disabled><i class="bi bi-plus"></i></button>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="custom-title-font">Qualifications:</label>
                        <div id="qualifications">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control border-2" disabled>
                            </div>
                        </div>
                        <div class="text-right" style="width: 100%; text-align: right;">
                            <button class="btn fs-6 fw-bold p-1 add-qualification mb-2" type="button" style="margin-top: auto; background: #F0F0F0;" disabled><i class="bi bi-plus"></i></button>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="custom-title-font">Benefits:</label>
                        <div id="benefits">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control border-2" disabled>
                            </div>
                        </div>
                        <div class="text-right" style="width: 100%; text-align: right;">
                            <button class="btn fs-6 fw-bold p-1 add-benefit mb-2" type="button" style="margin-top: auto; background: #F0F0F0;" disabled><i class="bi bi-plus"></i></button>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="custom-title-font">Other Information:</label>
                        <div id="other-information">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control border-2" disabled>
                            </div>
                        </div>
                        <div class="text-right" style="width: 100%; text-align: right;">
                            <button class="btn fs-6 fw-bold p-1 add-other-information mb-2" type="button" style="margin-top: auto; background: #F0F0F0;" disabled><i class="bi bi-plus"></i></button>
                        </div>
                    </div>
                </form>
            </div>
            <div class="col-md-4 mt-5">
                <div class="container mt-5" style="max-width: 400px; background-color: #FFFFFF; border: 1px solid #ddd; border-radius: 8px; padding: 20px; box-shadow: 2px 4px 40px rgba(0, 0, 0, 0.08);">
                    <h5>Requirement Milestone</h5>
                    <div id="milestoneList" style="min-height: 50px;">
                        <!-- Milestone items will be dynamically added here -->
                    </div>
                    <button id="addStepBtn" class="btn" style="display: flex; align-items: center; margin-top: 10px;" disabled>
                        <img src="~/User/img/Plus Circle Icon.png" alt="Image 5" style="max-width: 20px; margin-right: 10px;">
                        <span style="font-weight: 600;">Add Steps</span>
                    </button>
                </div>
            </div>
            <div class="row justify-content-end mt-3">
                <div class="col-auto">
                    <button id="saveBtn" type="button" class="btn btn-success ps-3 pe-3" style="background-color: #4AA147; border-color: #4AA147;" disabled>Save</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        var milestones = [];

        $('.add-responsibility').click(function () {
            $('#responsibilities').append(`
                                <div class="input-group mb-2">
                                    <input type="text" class="form-control border-2">
                                </div>
                            `);
        });

        $('.add-qualification').click(function () {
            $('#qualifications').append(`
                                <div class="input-group mb-2">
                                    <input type="text" class="form-control border-2">
                                </div>
                            `);
        });

        $('.add-benefit').click(function () {
            $('#benefits').append(`
                                <div class="input-group mb-2">
                                    <input type="text" class="form-control border-2">
                                </div>
                            `);
        });

        $('.add-other-information').click(function () {
            $('#other-information').append(`
                                <div class="input-group mb-2">
                                    <input type="text" class="form-control border-2">
                                </div>
                            `);
        });

        $(document).ready(function () {
            function updateSerialNumbers() {
                $('#milestoneList .milestone-item').each(function (index) {
                    $(this).find('.serial-number').text(index + 1);
                });
            }

            function addMilestoneItem() {
                var newItem = $('<div class="milestone-item">' +
                    '<span class="serial-number" style="margin-right: 10px;"></span>' +
                    '<select class="form-select milestone-dropdown">' +
                    '<option value="">Select Milestone</option>' +
                    '</select>' +
                    '<button class="btn remove-step-btn">' +
                    '<i class="fas fa-trash-alt"></i>' +
                    '</button>' +
                    '</div>');
                $('#milestoneList').append(newItem);

                var dropdown = newItem.find('.milestone-dropdown');

                $.each(milestones, function (index, milestone) {
                    // dropdown.append($('<option></option>').attr('value', milestone.id).text(milestone.description).data('type', milestone.type));
                    dropdown.append($('<option></option>').attr('value', milestone.id).text(milestone.description).data('name', milestone.name).data('description', milestone.description).data('type', milestone.type));

                });
                updateSerialNumbers();

                // Refresh sortable after adding a new item
                $('#milestoneList').sortable('refresh');
            }

            $.ajax({
                url: '/Recruitment/GetRecruitmentVariables', // Adjust the URL as per your actual endpoint
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    milestones = data;
                    console.log(data); // Logs the entire data object

                    // Log specific fields for each milestone
                    $.each(milestones, function (index, milestone) {
                        console.log('Milestone ID: ' + milestone.id);
                        console.log('Milestone Name: ' + milestone.name);
                        console.log('Milestone Description: ' + milestone.description);
                        console.log('Milestone Type: ' + milestone.type);
                    });

                    // Populate initial dropdowns
                    $('.milestone-dropdown').each(function () {
                        var dropdown = $(this);
                        $.each(milestones, function (index, data) {
                            dropdown.append($('<option></option>').attr('value', data.id).text(data.description).data('milestone', {
                                id: data.id,
                                description: data.description,
                                name: data.name
                            }));
                        });
                    });
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching recruitment variables: ' + error);
                }
            });


            $('#addStepBtn').on('click', function () {
                addMilestoneItem();
            });

            $('#milestoneList').on('click', '.remove-step-btn', function () {
                $(this).closest('.milestone-item').remove();
                updateSerialNumbers();
            });

            $('#milestoneList').sortable({
                update: function (event, ui) {
                    updateSerialNumbers();
                }
            }).disableSelection();
        });




        function addMilestoneItem(milestone, index, isSelected) {
            var milestoneItem = `
                                <div class="milestone-item" data-serial="${index}">
                                    <span class="serial-number">${index}</span>
                                    <select class="form-control milestone-dropdown select2-milestones">
                                        <option value="${milestone.id}" data-type="${milestone.type}" selected>${milestone.description}</option>
                                    </select>
                                    <button class="btn btn-danger remove-step-btn" type="button"><i class="fas fa-trash-alt"></i></button>
                                </div>
                            `;
            $('#milestoneList').append(milestoneItem);
            $('.select2-milestones').select2({
                data: milestones.map(m => ({
                    id: m.id,
                    text: m.description,
                    type: m.type
                }))
            });
        }

        
        $(document).ready(function () {
            // var milestones = [];
        var id = $('#designationId').val();
            // Fetch data on page load
          
            $.ajax({
                type: "GET",
                url: '/Recruitment/GetDetailsById?id=' + id,
                success: function (response) {
                    if (response.success) {
                        $('#milestoneList').empty();
                        response.data.milestones.forEach(function (milestone, index) {
                            addMilestoneItem(milestone, index + 1, true); // Pass true to mark existing milestones as selected
                        });
                        console.log("Designation Description Data:", response.data);
                      //  milestones = response.data.milestones; // Save milestones globally
                        console.log(milestones);
                        populateFields(response.data);
                    } else {
                        console.error(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });

            // Function to populate fields with data
            function populateFields(data) {
                $('#description').val(data.description);

                // Populate designation dropdown
                $('#designationDropdown').empty();
                $('#designationDropdown').append(`<option value="${data.designationId}">${data.designation}</option>`);
                $('#designationDropdown').val(data.designationId).trigger('change');

                $('#responsibilities').empty();
                data.responsibilities.forEach(function (item) {
                    $('#responsibilities').append('<div class="input-group mb-2"><input type="text" class="form-control border-2" value="' + item + '" disabled></div>');
                });

                $('#qualifications').empty();
                data.qualifications.forEach(function (item) {
                    $('#qualifications').append('<div class="input-group mb-2"><input type="text" class="form-control border-2" value="' + item + '" disabled></div>');
                });

                $('#benefits').empty();
                data.benefits.forEach(function (item) {
                    $('#benefits').append('<div class="input-group mb-2"><input type="text" class="form-control border-2" value="' + item + '" disabled></div>');
                });

                $('#other-information').empty();
                data.otherInformation.forEach(function (item) {
                    $('#other-information').append('<div class="input-group mb-2"><input type="text" class="form-control border-2" value="' + item + '" disabled></div>');
                });

            }

            // Function to add milestone item
            function addMilestoneItem(milestone, index, isSelected) {
                var milestoneItem = `
                        <div class="milestone-item" data-serial="${index}">
                            <span class="serial-number">${index}</span>
                            <select class="form-control milestone-dropdown select2-milestones">
                                <option value="${milestone.id}" data-type="${milestone.type}" selected>${milestone.description}</option>
                            </select>
                            <button class="btn btn-danger remove-step-btn" type="button"><i class="fas fa-trash-alt"></i></button>
                        </div>
                    `;
                $('#milestoneList').append(milestoneItem);
                $('.select2-milestones').select2({
                    data: milestones.map(m => ({
                        id: m.id,
                        text: m.description,
                        type: m.type
                    }))
                });
            }

            // Handle Remove Step button click
            $(document).on('click', '.remove-step-btn', function () {
                var milestoneItem = $(this).closest('.milestone-item');
                var milestoneId = milestoneItem.find('.select2-milestones').val();

                console.log('Attempting to delete milestone with ID:', milestoneId); // Debugging statement

                $.ajax({
                    type: "POST",
                    url: '/Recruitment/DeleteMilestone',
                    data: { id: milestoneId },
                    success: function (response) {
                        if (response.success) {
                            console.log('Milestone deleted successfully:', milestoneId); // Debugging statement
                            milestoneItem.remove(); // Remove milestone from UI
                            updateMilestoneSerials(); // Update serial numbers
                        } else {
                            console.error(response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error(error);
                    }
                });
            });

            function updateMilestoneSerials() {
                $('#milestoneList .milestone-item').each(function (index) {
                    $(this).attr('data-serial', index + 1);
                    $(this).find('.serial-number').text(index + 1); // Update serial number display
                });
            }

            // Toggle edit mode
            $('#editBtn').click(function () {
                var isEditable = $('#description').prop('disabled');
                toggleFields(isEditable);
            });



            // Function to enable/disable fields
            function toggleFields(editable) {
                $('#description').prop('disabled', !editable);
                $('#designationDropdown').prop('disabled', !editable);
                $('#responsibilities input').prop('disabled', !editable);
                $('#qualifications input').prop('disabled', !editable);
                $('#benefits input').prop('disabled', !editable);
                $('#other-information input').prop('disabled', !editable);
                $('#addStepBtn').prop('disabled', !editable);
                $('#saveBtn').prop('disabled', !editable);
                $('.add-responsibility').prop('disabled', !editable);
                $('.add-qualification').prop('disabled', !editable);
                $('.add-benefit').prop('disabled', !editable);
                $('.add-other-information').prop('disabled', !editable);
                $('.remove-step-btn').prop('disabled', !editable);
                $('#milestoneList').prop('disabled', !editable);
                $('.milestone-dropdown').prop('disabled', !editable); // Ensure milestone dropdowns are enabled/disabled
            }          

            // Handle Save button click
        });




      


        $('#saveBtn').click(function () {
            var jobDescription = {
                id: $('#designationId').val(),
                designationId: $('#designationDropdown').val(),
                description: $('#description').val(),
                responsibilities: [],
                qualifications: [],
                benefits: [],
                otherInformation: [],
                milestones: []
            };

            $('#responsibilities input').each(function () {
                jobDescription.responsibilities.push($(this).val());
            });

            $('#qualifications input').each(function () {
                jobDescription.qualifications.push($(this).val());
            });

            $('#benefits input').each(function () {
                jobDescription.benefits.push($(this).val());
            });

            $('#other-information input').each(function () {
                jobDescription.otherInformation.push($(this).val());
            });

            $('#milestoneList .milestone-item').each(function () {
                var milestoneItem = $(this);
                var milestoneId = milestoneItem.find('.select2-milestones').val();
                //var milestoneSerial = milestoneItem.attr('data-serial');
                var milestoneSerial = $(this).find('.serial-number').text();
                var milestoneName = milestoneItem.find('.select2-milestones option:selected').text(); // Fetching the name
                //var milestoneType = milestoneItem.find('.milestone-type').val(); // Fetching the type
                var milestoneType = $(this).find('.milestone-dropdown option:selected').data('type'); // Assuming 'type' is stored in data attribute
                var milestoneName = $(this).find('.milestone-dropdown option:selected').text(); // Assuming 'type' is stored in data attribute

                jobDescription.milestones.push({
                    id: milestoneId,
                    name: milestoneName,
                    serial: milestoneSerial,
                    jobDescriptionId: $('#designationDropdown').val(),
                    type: milestoneType
                });
            });


            console.log("Save Data:", jobDescription);

            $.ajax({
                type: "POST",
                url: "/Recruitment/CreateJobDescription",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(jobDescription),
                success: function (response) {
                    alert("Job Description saved successfully!");
                    toggleFields(false);
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });

        });


      


    </script>



}
