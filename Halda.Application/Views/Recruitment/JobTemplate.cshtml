@model List<JobListDTO>
@using Halda.Application
@{
    ViewData["Title"] = "Job";
    Layout = "_LayoutAdmin";
}

 <style>
    /* Optional: Adjusting modal content for better visibility */
    .modal-content {
        border: none;
        box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.1);
    }

    /* Optional: Styling clickable cards */
    .clickable-cards {
        position: relative;
        border: 1px solid #EEF1F6;
        width: 150px;
        height: 150px;
        padding: 20px;
        border-radius: 12px;
        transition: border-color 0.3s, background-color 0.3s;
        cursor: pointer;
        display: inline-block; /* Ensures cards are inline */
        */
    }

        .clickable-cards img {
            max-width: 50px;
            display: block;
            margin: auto;
        }

    .check-icon {
        position: absolute;
        top: 10px;
        right: 10px;
        max-width: 30px;
        display: none; /* Hidden by default */
    }

    /* Optional: Adjusting spacing and margins */
    .mb-4 {
        margin-bottom: 2rem;
    }

    .mt-4 {
        margin-top: 2rem;
    }
</style>

<div class="container">
<ul class="nav custom-pills mt-2 mb-3" id="custom-pills-tab" role="tablist">
    <li class="nav-item me-2" role="presentation">
        <button class="nav-link custom-nav-link active" id="job-tab" data-bs-toggle="tab" href="#job" role="tab" aria-controls="job" aria-selected="true">Job</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link custom-nav-link" id="template-tab" data-bs-toggle="tab" href="#template" role="tab" aria-controls="template" aria-selected="false">Template</button>
    </li>
</ul>
    <!-- Tab panes -->
    <div class="tab-content">
        <div class="tab-pane fade show active" id="job" role="tabpanel" aria-labelledby="job-tab">
            <!-- Job Content Here -->

            <div >
                <div class="col-lg-12 m-2 rounded border border-muted p-2 border-1" style="background: #FBFBFB;">
                    <div class="d-flex mb-2 justify-content-between align-items-center pt-2 px-md-2">
                        <div class="">
                            <div class="dropdown me-2" style="display: inline-block;">
                                <button type="button" class="btn dropdown-toggle" data-bs-toggle="dropdown" style="background-color: #FBFBFB; font-weight: 500; color: #414042; border: 1px solid #ccc;">
                                    Filtering By Department
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="#">Last 7 Days</a></li>
                                    <li><a class="dropdown-item" href="#">Last 15 Days</a></li>
                                    <li><a class="dropdown-item" href="#">Archive</a></li>
                                    <li><a class="dropdown-item" href="#">Previous</a></li>
                                    <li><a class="dropdown-item" href="#">Current Job</a></li>
                                </ul>
                            </div>
                            <div class="dropdown" style="display: inline-block;">
                                <button type="button" class="btn dropdown-toggle" data-bs-toggle="dropdown" style="background-color: #FBFBFB; font-weight: 500; color: #414042; border: 1px solid #ccc;">
                                    All
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="#">Last 7 Days</a></li>
                                    <li><a class="dropdown-item" href="#">Last 15 Days</a></li>
                                    <li><a class="dropdown-item" href="#">Archive</a></li>
                                    <li><a class="dropdown-item" href="#">Previous</a></li>
                                    <li><a class="dropdown-item" href="#">Current Job</a></li>
                                </ul>
                            </div>
                        </div>
                        <button type="button" class="btn d-flex align-items-center" style="background-color: #FBFBFB; border: 1px solid #D0D5DD; border-radius: 9.94px;" id="openModalButton">
                        <img src="~/User/img/add-square.png" alt="Image 2" style="max-width: 20px; margin-right: 8px;">
                        <p style="font-weight: 600; margin: 0;">Create</p>
                    </button>

                    </div>


                    <div class="row pb-3 px-md-2">

                        <!-- Template CARD -->
                        @foreach (var job in Model)
                        {
                            <div class="col-lg-6 p-md-2 mb-1">
                                <div class="card template-card" style="width: 100%; height:440px" onclick="redirectToDetails('@Url.Action("ApplicationProcess", "Recruitment", new { id = job.Id })')">
                                    <div class="p-2">
                                        <div class="d-flex justify-content-end">
                                            <img src="~/User/img/filter.png" alt="filter" class="pt-1" style="max-width: 25px; max-height: 25px;">
                                            <div class="dropdown" onclick="event.stopPropagation();">
                                                <img src="~/User/img/more-vertical.png" alt="more-vertical" class="dropdown-toggle" style="max-width: 30px;" onclick="toggleDropdown('@job.Id')">
                                                <div id="dropdownMenu-@job.Id" class="dropdown-menu">
                                                    <a href="@Url.Action("ViewJobDetails", "Recruitment", new { id = job.Id })" class="dropdown-item">View</a>
                                                    <a href="javascript:void(0);" class="dropdown-item" onclick="confirmDelete('@Url.Action("DeleteJobPost", "Job", new { id = job.Id })')">
                                                        Delete
                                                    </a>
                                                    <a href="#" class="dropdown-item dropdown-item-share" data-jobid="@job.Id">Share</a>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="px-3">
                                            <div class="row">
                                                <div class="col-lg-12">
                                                    <div style="display: flex; justify-content: space-between; align-items: flex-start;">
                                                        <div>
                                                            <div style="font-size: 18px; font-weight: 500; text-align: left; color: #414042;">
                                                                We are hiring <img src="~/User/img/hand.png" alt="hand" style="max-width: 28px; margin-top: -5px;">
                                                            </div>
                                                            <div style="font-size: 45px; font-weight: 900; line-height: 55px; text-align: left; @GetRandomGradient()">
                                                                @job.JobTittel <img src="~/User/img/@GetRandomStarImage()" alt="star" style="max-width: 30px; margin-top: -40px;">
                                                            </div>
                                                            <div class="mt-1"></div>
                                                        </div>
                                                        <div>
                                                            <img src="~/User/img/arrow.png" alt="arrow" class="pt-2" style="max-width: 50px; margin-left: -15px;">
                                                        </div>
                                                    </div>

                                                    <div class="mt-3">
                                                        <span class="" style="font-size: 14px; font-weight: 500; line-height: 11.9px; text-align: left; color: #414042;">
                                                            @job.JobTypes?.FirstOrDefault()
                                                            @if (job.JobTypes != null)
                                                            {
                                                                foreach (var Typetag in job.JobTypes)
                                                                {
                                                                    <span class="jobType">@Typetag</span>
                                                                }
                                                            }
                                                        </span>
                                                    </div>
                                                </div>
                                                <div class="tags mt-3">
                                                    @foreach (var tag in job.JobTags)
                                                    {
                                                        <p class="tag">@tag</p>
                                                    }
                                                </div>
                                                <div class="tags mt-3">
                                                    <p class="tag" style="font-size: 14px;">
                                                        <img src="~/User/img/elements.png" alt="elements" style="max-width: 15px; max-height: 15px; margin-right: 5px;"> @job.Email
                                                    </p>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-12 ms-3">
                                                <div class="d-flex align-items-center">
                                                    <img src="~/User/img/location.png" alt="location" class="pt-2" style="max-width: 25px;">
                                                    <p class="pt-2" style="font-size: 12px; margin-bottom: 0; margin-left: 5px; font-weight: 600;">@job.Location</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        

                        @functions {
                            Random random = new Random();

                            // Function to generate random linear gradient styles
                            string GetRandomGradient()
                            {
                                string[] gradients = {
                                    "background: linear-gradient(101.58deg, #3087ED 3.71%, #31BC69 88.87%); -webkit-background-clip: text; -webkit-text-fill-color: transparent;",
                                    "background: linear-gradient(281.86deg, #F362A8 -29.58%, #D9DD13 143.71%); -webkit-background-clip: text; -webkit-text-fill-color: transparent;",
                                    "background: linear-gradient(100.83deg, #8D6DEA -4.35%, #FC92FE 109.73%); -webkit-background-clip: text; -webkit-text-fill-color: transparent;",
                                    "background: linear-gradient(99.86deg, #BAD570 0.9%, #8075FF 126.41%); -webkit-background-clip: text; -webkit-text-fill-color: transparent;"
                                                        };
                                return gradients[random.Next(gradients.Length)];
                            }

                            // Function to select a random star image
                            string GetRandomStarImage()
                            {
                                string[] starImages = {
                                    "star.png",
                                    "star1.png",
                                    "star2.png",
                                    "star3.png"
                                };
                                return starImages[random.Next(starImages.Length)];
                            }
                        }






                    </div>
                </div>

            </div>

            
        </div>

        <div class="tab-pane fade" id="template" role="tabpanel" aria-labelledby="template-tab">
            <!-- Template Content Here -->
            <div class="container p-3" style="background-color: #FCF3F3; border-radius: 10px;">

                <div class="row mb-3 mt-3">
                    <div class="col-md-2 ">
                        <h6>Select </h6>
                        <select id="designation-filter" class="select2" style="width: 100%; padding: 10px; border: 1px solid #D0D5DD; border-radius: 5px;" onchange="templatePopulating()">
                            
                        </select>
                    </div>
                    <div class="col-md-10">
                        <div class="row justify-content-end mt-3">
                            <div class="col-auto">
                                <button type="button" class="btn btn-light ps-3 pe-3" onclick="location.href='@Url.Action("CreateJobDescription", "Recruitment")'">
                                    <span style="font-weight: 600; font-size: 16px;">New</span>
                                    <img src="~/User/img/add-01.png" alt="Image 1" style="max-width: 18px;">
                                </button>

                            </div>
                        </div>
                    </div>

                </div>

                <div class="row mt-4" id="designation-container">

                    @* @foreach (var designation in Model)
                    {
                        <div class="col-md-6">
                            <form action="@Url.Action("ViewJobDescription", "Recruitment")" method="get" class="card-form">
                                <input type="hidden" name="id" value="@designation.Id" />
                                <div class="card p-3 clickable-card m-2 template-card" style="height:440px; border-radius: 15px; border: 2px solid #D4D4D4;" data-id="@designation.Id" onclick="this.closest('form').submit();">
                                    <div class="row align-items-center">
                                        <div class="col-md-12 d-flex align-items-center">
                                            <img src="~/User/img/job-icon.png" alt="Image 1" class="img-fluid" style="max-width: 40px; margin-right: 10px;">
                                            <div>
                                                @Html.Hidden("Id", designation.Id) <!-- Hidden input for DesignationId -->
                                                @if (!string.IsNullOrEmpty(designation.Name))
                                                {
                                                    <span style="font-weight: 700; font-size: 20px;">@designation.Name</span>
                                                }
                                                else
                                                {
                                                    <span style="font-weight: 700; font-size: 20px;">Designation Name Not Available</span>
                                                }
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row p-3">
                                        @if (designation.MilestoneViewModels != null && designation.MilestoneViewModels.Count > 0)
                                        {
                                            @foreach (var milestone in designation.MilestoneViewModels)
                                            {
                                                <div class="p-2 mb-2 d-flex justify-content-between align-items-center hover-effect-interview-status" style="border: 2px solid #D4D4D4; border-radius: 10px;">
                                                    @Html.Hidden("Id", milestone.Id) <!-- Hidden input for MilestoneId -->
                                                    @if (!string.IsNullOrEmpty(milestone.Name))
                                                    {
                                                        <span style="font-weight: 600;">@milestone.Name</span>
                                                    }
                                                    else
                                                    {
                                                        <span style="font-weight: 600;">Milestone Name Not Available</span>
                                                    }
                                                    <img src="~/User/img/more-vertical.png" alt="Image 1" style="max-width: 30px; margin-left: 10px;">
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            <div>No milestones available for this designation.</div>
                                        }
                                    </div>
                                </div>
                            </form>
                        </div>
                    } *@




                </div>



            </div>


            
        </div>
    </div>

</div>
@* //modal *@
<div class="modal fade" id="attachTemplateModal" tabindex="-1" role="dialog" aria-labelledby="attachTemplateModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            
            <div class="modal-body">
                <!-- Step 1: Initial View -->
                <div id="initialView" class="container">
                    <div class="mx-5" style="border: 2px solid #F0F0F0; padding-bottom: 50px; padding-top: 100px; margin-top: 20px;">
                        <h6 class="fs-5 text-center pb-4">
                            Attach Template
                        </h6>
                        @* <div class="d-flex justify-content-center p-4">
                            <div class="me-4" data-toggle="tooltip_createjobscrach" title="Create from Scratch">
                                <div class="clickable-cards" data-id="scratch" onclick="selectOption('scratch')">
                                    <img src="~/User/img/Colour Icon.png" alt="main-icon">
                                    <img src="~/User/img/check.png" alt="check-icon" class="check-icon">
                                </div>
                            </div>
                            <div data-toggle="tooltip_createjobwithTemplate" title="Create With Template">
                                <div class="clickable-cards" data-id="template" onclick="selectOption('template')">
                                    <img src="~/User/img/Folder Icon.png" alt="main-icon">
                                    <img src="~/User/img/check.png" alt="check-icon" class="check-icon">
                                </div>
                            </div>
                        </div> *@
                        <div class="d-flex justify-content-center p-4">
                            <div>
                                <div class="text-center me-3"
                                     style="position: relative; border: 1px solid #EEF1F6; width: 200px; height: 190px; align-content: center; padding: 40px; border-radius: 30px; transition: border-color 0.3s, background-color 0.3s;"
                                     onmouseover="this.style.borderColor='#4AA147'; this.style.backgroundColor='#F7F9FD';"
                                     onmouseout="this.style.borderColor='#EEF1F6'; this.style.backgroundColor='transparent';" onclick="selectOption('scratch')">
                                    <img src="~/User/img/Colour Icon.png" alt="main-icon" style="max-width: 50px;">
                                    <img src="~/User/img/check.png" alt="check-icon" style="position: absolute; top: -10px; right: -10px; max-width: 40px; display: none;">

                                </div>
                                <p class="text-center">
                                    Start from scratch
                                </p>
                            </div>
                            
                            <div>
                                <div class="text-center ms-2"
                                     style="position: relative; border: 1px solid #EEF1F6; width: 200px; height: 190px; align-content: center; padding: 40px; border-radius: 30px; transition: border-color 0.3s, background-color 0.3s;"
                                     onmouseover="this.style.borderColor='#4AA147'; this.style.backgroundColor='#F7F9FD';"
                                     onmouseout="this.style.borderColor='#EEF1F6'; this.style.backgroundColor='transparent';" onclick="selectOption('template')">
                                    <img src="~/User/img/Folder Icon.png" alt="main-icon" style="max-width: 50px;">
                                    <img src="~/User/img/check.png" alt="check-icon" style="position: absolute; top: -10px; right: -10px; max-width: 40px; display: none;">

                                </div>
                                <p class="text-center">
                                    Use a template
                                </p>
                            </div>
                            
                        </div>
                        <button type="button" class="btn btn-secondary float-end me-2" data-bs-dismiss="modal">Cancel</button>
                    </div>

                   
                </div>

                <!-- Step 2: Template List View (Initially hidden) -->
                <div id="templateListView" class="d-none container">
                    <h6 class="fs-5 text-center pb-4">
                        Template List
                    </h6>
                    <ul id="templateList" class="list-group"></ul>
                    <div class="d-flex  mt-1 justify-content-end">
                        <button type="button" class="btn me-3" style="background-color: #D4D4D4; color: #FFFFFF; padding: 10px 15px; border: none; border-radius: 4px;" onclick="showInitialView()">Back</button>
                     
                    </div>
                  
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<!-- Modal HTML -->
<div id="shareModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Share Job Link</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="shareLink"></p>
                <button class="btn btn-copy" data-clipboard-target="#shareLink">Copy Link</button>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-cancel" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>


<!-- JavaScript Section -->
@section Scripts {


    <script>

        // Function to handle redirection to another controller when clicking the card body
        function redirectToDetails(url) {
            window.location.href = url;
        }

        // Function to stop dropdown click propagation
        function toggleDropdown(jobId) {
            const dropdownMenu = document.getElementById(`dropdownMenu-${jobId}`);
            dropdownMenu.classList.toggle('show');
            event.stopPropagation();
        }

        function confirmDelete(url) {
            if (confirm('Are you sure you want to delete this job?')) {
                $.ajax({
                    url: url,
                    type: 'DELETE', // or 'DELETE' if your controller method is expecting a DELETE request
                    success: function (result) {
                        // Handle success response
                        alert('Job deleted successfully.');
                        // Optionally, you can refresh the page or update the UI to reflect the change
                        location.reload(); // Refresh the page
                    },
                    error: function (xhr, status, error) {
                        // Handle error response
                        alert('An error occurred while deleting the job.');
                    }
                });
            }
        }

        document.querySelectorAll('.text-center').forEach(div => {
            div.addEventListener('mouseover', function () {
                this.querySelector('img[alt="check-icon"]').style.display = 'block';
            });
            div.addEventListener('mouseout', function () {
                this.querySelector('img[alt="check-icon"]').style.display = 'none';
            });
        });

        $(document).ready(function () {
            $('.dropdown-item-share').click(function (e) {
                e.preventDefault();
                console.log("Share button clicked");

                var jobId = $(this).data('jobid');
                if (!jobId) {
                    console.error('Job ID not found');
                    return;
                }

              //  var url = `https://localhost:7044/Job/JobDetails/?id=${jobId}`;
                var baseUrl = '@Url.Action("JobDetails", "Job", null, Context.Request.Scheme)'; 
                var url = `${baseUrl}?id=${jobId}`;
                

                console.log("Generated URL:", url);

                var shareLink = url;
                $('#shareLink').text(shareLink);
                $('#shareModal').modal('show');

                var clipboard = new ClipboardJS('.btn-copy');

                clipboard.on('success', function (e) {
                    alert('Link copied to clipboard: ' + e.text);
                    $('#shareModal').modal('hide');
                });

                clipboard.on('error', function (e) {
                    console.error('Copy failed:', e.action);
                });
            });

            $('#shareModal .close, #shareModal .btn-cancel').click(function () {
                $('#shareModal').modal('hide');
            });

            $("#designation-filter").select2();

            document.getElementById('openModalButton').addEventListener('click', function () {
                var modal = new bootstrap.Modal(document.getElementById('attachTemplateModal'), {
                    keyboard: false
                });
                modal.show();
            });
        });
    </script>

    <script>

        function templatePopulating() {
            var designation = $('#designation-filter').val();
            $.ajax({
                url: '@Url.Action("GetAllTemplate", "Recruitment")',
                type: 'GET',
                data: { designation: designation },
                dataType: 'json',
                success: function (data) {
                    var container = $('#designation-container');
                    container.empty();

                    $.each(data, function (index, designation) {
                        var card = `
                                            <div class="col-md-6">
                                                <form action="@Url.Action("ViewJobDescription", "Recruitment")" method="get" class="card-form">
                                                    <input type="hidden" name="id" value="${designation.id}" />
                                                    <div class="card p-3 clickable-card m-2 template-card" style="height:440px; border-radius: 15px; border: 2px solid #D4D4D4;" data-id="${designation.id}" onclick="$(this).closest('form').submit();">
                                                        <div class="row align-items-center">
                                                            <div class="col-md-12 d-flex align-items-center">
                                                                        <img src="@Url.Content("~/User/img/job-icon.png")" alt="Image 1" class="img-fluid" style="max-width: 40px; margin-right: 10px;">
                                                                <div>
                                                                    <span style="font-weight: 700; font-size: 20px;">
                                                                        ${designation.name || 'Designation Name Not Available'}
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="row p-3">`;

                        if (designation.milestoneViewModels && designation.milestoneViewModels.length > 0) {
                            $.each(designation.milestoneViewModels, function (i, milestone) {
                                card += `
                                                    <div class="p-2 mb-2 d-flex justify-content-between align-items-center hover-effect-interview-status" style="border: 2px solid #D4D4D4; border-radius: 10px;">
                                                        <span style="font-weight: 600;">${milestone.name || 'Milestone Name Not Available'}</span>
                                                                <img src="@Url.Content("~/User/img/more-vertical.png")" alt="Image 1" style="max-width: 30px; margin-left: 10px;">

                                                    </div>`;
                            });
                        } else {
                            card += `<div>No milestones available for this designation.</div>`;
                        }

                        card += `</div></div></form></div>`;
                        container.append(card);
                    });
                },
                error: function () {
                    alert('Error loading designations.');
                }
            });
        }
        $(document).ready(function () {

            $.ajax({
                url: '@Url.Action("GetDesignationDropdown", "Recruitment")', // Adjust to your action method
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    var $select = $('#designation-filter');
                    $select.empty(); // Clear existing options

                    $select.append($('<option>', {
                        value: 0,
                        text: "Select"
                    }));
                    // Populate with new options
                    $.each(data, function (index, option) {
                        $select.append($('<option>', {
                            value: option.value,
                            text: option.text
                        }));
                    });

                    // Trigger change event if necessary
                    $select.trigger('change');
                },
                error: function () {
                    alert('Error loading filter options.');
                }
            });
            
            templatePopulating();

            
        });

    </script>

    <script>

     



        $(document).ready(function () {
            var selectedOption = ''; // To store the selected option

            // Function to handle option selection
            window.selectOption = function (option) {
                selectedOption = option;
                $('.clickable-card').removeClass('selected');
                $('[data-id="' + option + '"]').addClass('selected');

                if (selectedOption === 'template') {
                    $('#initialView').addClass('d-none');
                    $('#templateListView').removeClass('d-none');
                    fetchTemplateList();
                }

                if (selectedOption === 'scratch') {
                    window.location.href = '@Url.Action("CreateScratchJob", "Recruitment")';
                }
            };

            // Function to switch back to initial view
            window.showInitialView = function () {
                $('#templateListView').addClass('d-none');
                $('#initialView').removeClass('d-none');
            };

            function fetchTemplateList() {
                // AJAX call to fetch template list
                $.ajax({
                    url: '@Url.Action("GetJobDescriptionTemplatesList", "Recruitment")',
                    type: 'GET',
                    success: function (data) {
                        displayTemplateList(data);
                    },
                    error: function () {
                        alert('Error retrieving template list');
                    }
                });
            }

            function displayTemplateList(templates) {
                var templateList = $("#templateList");
                templateList.empty();
                templates.forEach(function (template) {
                    var listItem = $('<li>').addClass('list-group-item d-flex justify-content-between align-items-center').text(template.job_Title);
                    var useButton = $('<button>').addClass('btn btn-primary btn-sm').text('Use').click(function () {
                        useTemplate(template.id);
                    });
                    listItem.append(useButton);
                    templateList.append(listItem);
                });
            }

            function useTemplate(templateId) {
                window.location.href = '@Url.Action("CreateJob", "Recruitment")' + '?id=' + templateId;
            }

            // Function to handle cancel button
            window.cancelModal = function () {
                $('#attachTemplateModal').modal('hide'); // Close the modal
                selectedOption = ''; // Reset selected option
            };



        });
    </script>


    <script>
        function toggleDropdown(jobId) {
            console.log("Hello I am From toggle:", jobId);
            var dropdownMenu = document.getElementById("dropdownMenu-" + jobId);
            if (dropdownMenu.style.display === "none" || dropdownMenu.style.display === "") {
                dropdownMenu.style.display = "block";
            } else {
                dropdownMenu.style.display = "none";
            }
        }

        // Close the dropdown if the user clicks outside of it
        window.onclick = function (event) {
            if (!event.target.matches('.dropdown-toggle')) {
                var dropdowns = document.getElementsByClassName("dropdown-menu");
                for (var i = 0; i < dropdowns.length; i++) {
                    var openDropdown = dropdowns[i];
                    if (openDropdown.style.display === "block") {
                        openDropdown.style.display = "none";
                    }
                }
            }
        }
    </script>

    

}



