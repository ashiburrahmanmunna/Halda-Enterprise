@{
    ViewData["Title"] = "Home";
    Layout = "_LayoutAdmin";
}

<div class="container-fluid rounded-4 border border-muted p-3 mt-2 border-1">
    <div class="row mx-0 mb-2" style="background-color: #FFFFFF; border-radius: 8px;  box-shadow: 0px 0px 10px 0px #0000000D; ">

        <h5 class="mt-3 pb-2" style="    font-weight: 700; font-size: 20px; padding-top: 10px;">
            Time Card  Summary
        </h5>
        <div class="row mb-2">
            <div class="col-md-4 pt-1 d-flex align-items-center gap-2">
                <div class="input-group" style="border-radius: 8px; border: 1px solid #D0D5DD; background: #FAFAFAED; box-shadow: 0px 1px 2px 0px rgba(16, 24, 40, 0.05); padding: 3px 5px;">
                    <input type="text" class="form-control border-0 shadow-none" placeholder="Search" aria-label="Search" style="background: transparent;">
                    <span class="input-group-text bg-transparent border-0" style="display: flex; align-items: center;">
                        <img alt="search" src="~/User/img/search.png" width="20" style="height: auto;">
                    </span>
                </div>
            </div>

            <!-- Dropdown container placed at the end -->
            <div class="col-md-8 d-flex justify-content-end align-items-center">

                <button class="me-2" style="background-color: #D3F6D2; color: #414042; padding: 10px 20px; border: none; border-radius: 7px; font-size: 16px; cursor: pointer;">
                    Custom View
                </button>

                <div class="dropdown">
                    <button class="dropdown-toggle py-1" id="dropdownMenuButton">
                        <i class="ri-printer-line fs-4"></i> <!-- Printer icon as default selection -->
                    </button>
                    <div class="dropdown-menu">
                        <a href="#" class="dropdown-item"><i class="ri-printer-line fs-4"></i> Print</a>
                        <a href="#" class="dropdown-item"><i class="ri-download-2-line fs-4"></i> Dowanload </a>
                        <a href="#" class="dropdown-item"><i class="ri-file-copy-line fs-4"></i> Copt </a>
                        <a href="#" class="dropdown-item"><i class="ri-refresh-line fs-4"></i> Refresh </a>
                    </div>
                </div>

            </div>
        </div>

        <div id="viewtimecard"></div>
    </div>

</div>

<script>
    const tabledata = [
        { id: 1, name: "John Doe", image: "/User/img/robin.png", designation: "Software Engineer", status: "Present", checkIn: "09:00 AM", checkOut: "05:00 PM", shift: "9 AM - 5 PM", worked: 8, remarks: "On Time" },
        { id: 2, name: "Jane Smith", image: "/User/img/person.png", designation: "Project Manager", status: "Absent", checkIn: "N/A", checkOut: "N/A", shift: "N/A", worked: 0, remarks: "Sick Leave" },
        { id: 3, name: "Emily Johnson", image: "/User/img/borhan.png", designation: "Designer", status: "Late", checkIn: "09:15 AM", checkOut: "05:00 PM", shift: "9 AM - 5 PM", worked: 7.75, remarks: "Late by 15 mins" },
        { id: 4, name: "Michael Brown", image: "/User/img/person_icon_3.png", designation: "Data Analyst", status: "Present", checkIn: "09:00 AM", checkOut: "05:00 PM", shift: "9 AM - 5 PM", worked: 8, remarks: "On Time" },
        { id: 5, name: "Sarah Davis", image: "/User/img/person_icon_2.png", designation: "HR Specialist", status: "Overtime", checkIn: "08:45 AM", checkOut: "06:00 PM", shift: "9 AM - 5 PM", worked: 9, remarks: "Worked Overtime" }
    ];

    // Wait for the DOM to be fully loaded
    document.addEventListener('DOMContentLoaded', function () {
        // Create the Tabulator table after the DOM is loaded
        var table = new Tabulator("#viewtimecard", {
            data: tabledata, // Load the data into the table
            layout: "fitColumns", // Fit columns to width of the table
            columns: [
                { title: "Employee ID", field: "id", sorter: "number", width: 70, headerHozAlign: "center" },
                {
                    title: "Employee Info", field: "name", headerHozAlign: "center", width: 190, formatter: function (cell, formatterParams, onRendered) {
                        var row = cell.getRow().getData();
                        return `<div style="display: flex; align-items: center;">
                                            <img src="${row.image}" class="employee-image" alt="${row.name}">
                                            <div class="employee-info" style="margin-left: 10px;">
                                                    <span class="employee-name" style="text-align: start;">${row.name}</span>
                                                <span class="employee-designation" style="text-align: start;">${row.designation}</span>
                                            </div>
                                        </div>`;
                    }
                },
                { title: "Attendance Status", field: "status", formatter: "textarea", headerHozAlign: "center" },
                { title: "Check-In Time", field: "checkIn", headerHozAlign: "center" },
                { title: "Check-Out Time", field: "checkOut", width: 135, headerHozAlign: "center" },
                { title: "Shift Timing", field: "shift", headerHozAlign: "center" },
                { title: "Hours Worked", field: "worked", headerHozAlign: "center" },
                { title: "Remarks", field: "remarks", headerHozAlign: "center" },
            ],
            pagination: "local",
            paginationSize: 7,
            paginationButtonCount: 4,
            paginationSizeSelector: [10, 25, 50, 100],
        });
    });

    // Toggle dropdown visibility
    document.addEventListener("DOMContentLoaded", function () {
        const dropdownToggle = document.querySelector('.dropdown-toggle');
        const dropdownMenu = document.querySelector('.dropdown-menu');

        dropdownToggle.addEventListener('click', function (event) {
            event.stopPropagation(); // Prevent clicks from bubbling up
            dropdownMenu.classList.toggle('open'); // Toggle the 'open' class
            dropdownMenu.style.display = dropdownMenu.style.display === 'block' ? 'none' : 'block';
        });

        // Close the dropdown if clicked outside
        document.addEventListener('click', function () {
            dropdownMenu.style.display = 'none';
        });
    });


</script>